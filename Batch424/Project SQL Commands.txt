create database batch424_project_demo1;
use batch424_project_demo1;


CREATE TABLE `author` (
  `author_id` int NOT NULL,
  `author_name` varchar(100) NOT NULL,
  `nationality` varchar(50) DEFAULT NULL,
  `birth_date` date DEFAULT NULL,
  `death_date` date DEFAULT NULL,
  PRIMARY KEY (`author_id`)
);

CREATE TABLE `language` (
  `language_id` int NOT NULL,
  `language_name` varchar(50) NOT NULL,
  `language_code` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`language_id`),
  UNIQUE KEY `language_name` (`language_name`)
);
 CREATE TABLE `books` (
  `book_id` int NOT NULL,
  `book_title` varchar(40) NOT NULL,
  `edition` varchar(50) DEFAULT NULL,
  `rental_price` double(10,2) DEFAULT NULL,
  `language` int DEFAULT NULL,
  `release_date` date DEFAULT NULL,
  PRIMARY KEY (`book_id`),
  KEY `language` (`language`),
  CONSTRAINT `books_ibfk_1` FOREIGN KEY (`language`) REFERENCES `language` (`language_id`),
  CONSTRAINT `books_chk_1` CHECK ((length(`book_title`) > 3))
);
 CREATE TABLE `book_author` (
  `book_author_id` int NOT NULL,
  `book_id` int DEFAULT NULL,
  `author_id` int DEFAULT NULL,
  PRIMARY KEY (`book_author_id`),
  UNIQUE KEY `book_id` (`book_id`,`author_id`),
  KEY `author_id` (`author_id`),
  CONSTRAINT `book_author_ibfk_1` FOREIGN KEY (`book_id`) REFERENCES `books` (`book_id`),
  CONSTRAINT `book_author_ibfk_2` FOREIGN KEY (`author_id`) REFERENCES `author` (`author_id`)
);

INSERT INTO language (language_id, language_name, language_code) VALUES
(1, 'English', 'EN'),
(2, 'Hindi', 'HI'),
(3, 'Spanish', 'ES'),
(4, 'French', 'FR'),
(5, 'German', 'DE'),
(6, 'Japanese', 'JA'),
(7, 'Chinese', 'ZH'),
(8, 'Russian', 'RU'),
(9, 'Arabic', 'AR'),
(10, 'Portuguese', 'PT'),
(11, 'Italian', 'IT'),
(12, 'Korean', 'KO'),
(13, 'Dutch', 'NL'),
(14, 'Swedish', 'SV'),
(15, 'Danish', 'DA'),
(16, 'Greek', 'EL'),
(17, 'Turkish', 'TR'),
(18, 'Polish', 'PL'),
(19, 'Thai', 'TH'),
(20, 'Vietnamese', 'VI');


INSERT INTO author (author_id, author_name, nationality, birth_date, death_date) VALUES
(1, 'William Shakespeare', 'English', '1564-04-23', '1616-04-23'),
(2, 'Jane Austen', 'English', '1775-12-16', '1817-07-18'),
(3, 'Mark Twain', 'American', '1835-11-30', '1910-04-21'),
(4, 'Leo Tolstoy', 'Russian', '1828-09-09', '1910-11-20'),
(5, 'Gabriel Garcia Marquez', 'Colombian', '1927-03-06', '2014-04-17'),
(6, 'J.K. Rowling', 'British', '1965-07-31', NULL),
(7, 'George Orwell', 'British', '1903-06-25', '1950-01-21'),
(8, 'Agatha Christie', 'British', '1890-09-15', '1976-01-12'),
(9, 'Ernest Hemingway', 'American', '1899-07-21', '1961-07-02'),
(10, 'Rabindranath Tagore', 'Indian', '1861-05-07', '1941-08-07'),
(11, 'Fyodor Dostoevsky', 'Russian', '1821-11-11', '1881-02-09'),
(12, 'Franz Kafka', 'Czech', '1883-07-03', '1924-06-03'),
(13, 'Virginia Woolf', 'British', '1882-01-25', '1941-03-28'),
(14, 'Arthur Conan Doyle', 'British', '1859-05-22', '1930-07-07'),
(15, 'Haruki Murakami', 'Japanese', '1949-01-12', NULL),
(16, 'Toni Morrison', 'American', '1931-02-18', '2019-08-05'),
(17, 'Albert Camus', 'French', '1913-11-07', '1960-01-04'),
(18, 'James Joyce', 'Irish', '1882-02-02', '1941-01-13'),
(19, 'Homer', 'Greek', NULL, NULL),
(20, 'Chinua Achebe', 'Nigerian', '1930-11-16', '2013-03-21');



INSERT INTO books (book_id, book_title, edition, rental_price, language, release_date) VALUES
(1, 'The Alchemist', 'First Edition', 100.00, 1, '2023-05-01'),
(2, '1984', 'Second Edition', 120.00, 2, '2022-03-15'),
(3, 'To Kill a Mockingbird', NULL, 80.50, 1, '2021-11-20'),
(4, 'Pride and Prejudice', 'Third Edition', 95.00, 2, '2023-01-05'),
(5, 'The Great Gatsby', 'Deluxe Edition', 150.00, 3, '2020-08-12'),
(6, 'War and Peace', 'First Edition', 200.00, 2, '2019-10-18'),
(7, 'The Catcher in the Rye', NULL, 110.00, 1, '2022-12-25'),
(8, 'Brave New World', 'Vintage Edition', 130.00, 1, '2021-07-07'),
(9, 'Animal Farm', 'Revised Edition', 75.00, 3, '2020-03-03'),
(10, 'Moby Dick', NULL, 140.00, 2, '2023-06-21'),
(11, 'Jane Eyre', 'First Edition', 115.00, 1, '2019-09-30'),
(12, 'Wuthering Heights', 'Collector\'s Edition', 125.00, 3, '2018-11-10'),
(13, 'A Tale of Two Cities', NULL, 85.00, 2, '2020-05-15'),
(14, 'Hamlet', 'Penguin Edition', 90.00, 2, '2019-04-12'),
(15, 'Macbeth', 'Hardcover Edition', 105.00, 1, '2023-02-10'),
(16, 'Romeo and Juliet', 'Paperback', 75.00, 3, '2021-01-25'),
(17, 'Othello', 'Special Edition', 120.00, 2, '2020-11-14'),
(18, 'King Lear', NULL, 135.00, 1, '2022-08-03'),
(19, 'The Odyssey', 'First Edition', 190.00, 3, '2019-07-22'),
(20, 'The Iliad', 'Classic Edition', 185.00, 1, '2018-12-01');



INSERT INTO book_author (book_author_id, book_id, author_id) VALUES
(1, 1, 2),
(2, 1, 7),
(3, 2, 1),
(4, 3, 2),
(5, 9, 2),
(6, 11, 4);




select 
 	 b.book_id,book_title,edition,author_name  
from 
 	books as b      join 	 book_author 
					 	using (book_id)
		        join  	
				 author   
						 using (author_id);


create view book_with_author as
select 
 	 b.book_id,book_title,edition,author_name  
from 
 	books as b      join 	 book_author 
					 	using (book_id)
		        join  	
				 author   
						 using (author_id);




select * from book_with_author where author_name like 'jane%';
 


 create table student
     (
     student_id	 	int	 	primary key,
     first_name 	varchar(20)	 not null,
     last_name 		varchar(20) ,
     total_pending_fee 	double,
     borrowed_book 	int
 );

alter table student add constraint foreign key(borrowed_book) references 
								books(book_id);


create table borrow_book (
    			borrow_book_id 		int 	primary key,
     			book_id 		int,
    			student_id 		int,
     			issue_date 		datetime default now(),
     			submission_date 	datetime 
				
				default (DATE_ADD(issue_date, INTERVAL 7 DAY)),
     			
			late_submission_charge 	double,
     			fine 			double,
     			submitted_on 		date);


alter table student add constraint foreign key(borrowed_book) references 
								books(book_id);

alter table borrow_book add constraint foreign key(book_id) references
								books(book_id);

alter table  borrow_book add constraint foreign key(student_id) references
								student(student_id);


delimiter $
create procedure borrow_a_book(in stu int, in book int, in borrow_date date)
begin 
	declare 














